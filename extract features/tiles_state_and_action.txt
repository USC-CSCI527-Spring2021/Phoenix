
sample example: 

一个list代表一个column，按row读，就可以得到场面上所有信息，以及最后采取的行动
[
    player_id_list: [0, 1, 2, ...] 

    dealer_list: [0, 0, 0, ...]

    repeat_dealer_list: [0, 0, 0, ...]

    riichi_bets_list: [0, 0, 0, ...]

    player_wind_list: ['E', 'N', 'W', ...]

    prevailing_wind_list: ['E', 'E', 'E', ...]

    player_tiles_list: 
       [{'closed_hand:': [95, 110, 50, 117, 108, 71, 127, 68, 51, 15, 122, 44, 49], 'open_hand': [], 'discarded_tiles': [8, 55, 66, 1, 3]},
        {'closed_hand:': [82, 54, 70, 63, 13, 12, 132, 14, 80, 134, 64, 101, 78], 'open_hand': [], 'discarded_tiles': [118, 121, 32, 36, 65]},
        {'closed_hand:': [20, 2, 113, 28, 6, 10, 18, 112, 57, 48, 61, 29, 34], 'open_hand': [], 'discarded_tiles': [120, 128, 96, 22, 4]},
	...
	]

    enemies_tiles_list:
	[list([{'enemy_seat': 1, 'closed_hand:': [82, 54, 70, 63, 13, 12, 132, 14, 80, 134, 64, 101, 78], 'open_hand': [], 'discarded_tiles': [118, 121, 32, 36, 65]}, {'enemy_seat':     	2, 'closed_hand:': [20, 2, 113, 28, 6, 10, 18, 112, 57, 48, 61, 29, 34], 'open_hand': [], 'discarded_tiles': [120, 128, 96, 22, 4]}, {'enemy_seat': 3, 'closed_hand:': [94, 	87, 21, 40, 45, 91, 81, 75, 16, 102], 'open_hand': [128, 129, 130], 'discarded_tiles': [9, 60, 31, 106, 41]}]),
 
        list([{'enemy_seat': 0, 'closed_hand:': [95, 110, 50, 117, 108, 71, 127, 68, 51, 15], 'open_hand': [41, 44, 49], 'discarded_tiles': [8, 55, 66, 1, 3, 122]}, {'enemy_seat': 	2, 'closed_hand:': [20, 2, 113, 28, 6, 10, 18, 112, 57, 48, 61, 29, 34], 'open_hand': [], 'discarded_tiles': [120, 128, 96, 22, 4]}, {'enemy_seat': 3, 'closed_hand:': [94, 	87, 21, 40, 45, 91, 81, 75, 16, 102], 'open_hand': [128, 129, 130], 'discarded_tiles': [9, 60, 31, 106, 41]}]),

 	list([{'enemy_seat': 0, 'closed_hand:': [95, 110, 50, 117, 108, 71, 127, 68, 51, 15], 'open_hand': [41, 44, 49], 'discarded_tiles': [8, 55, 66, 1, 3, 122]}, {'enemy_seat': 	1, 'closed_hand:': [82, 54, 70, 63, 13, 12, 132, 14, 80, 134, 64, 78, 52], 'open_hand': [], 'discarded_tiles': [118, 121, 32, 36, 65, 101]}, {'enemy_seat': 3, 	'closed_hand:': [94, 87, 21, 40, 45, 91, 81, 75, 16, 102], 'open_hand': [128, 129, 130], 'discarded_tiles': [9, 60, 31, 106, 41]}])
	...
	]
	
    dora_list:
	[list([43]), list([43]), list([43]), ...]
	
    scores_list: (就是points on the panel, 在reach之后, reach玩家的分数会减1000, 一局结束也会再算分数)
	[list([25000, 25000, 25000, 25000]), list([25000, 25000, 25000, 25000]), list([25000, 25000, 25000, 25000]), ...]

    last_player_discarded_tile_list(左手玩家丢出的牌，为chi(吃)决策准备；如果牌局刚开始，还没有左手边玩家丢出的手牌时，此处为None):
	[41, 122, 101, ...]

    last_three_discarded_tile_list: (上一轮三个enemies丢出的牌，为minkan(明杠), pon(碰) 准备；如果牌局刚开始，没有玩家丢出的手牌时，缺失的部分为None, 例[64, None, None])
	[list([65, 4, 41]), list([122, 4, 41]), list([122, 101, 41]), ..]

    could_chi_list:(该时刻玩家可不可以吃，可为1，不可为0；note: 只是可不可吃，并非真正采取的决策，下面‘could_pon_list’, 'could_minkan_list' 同理)
	[1, 0, 0, ...]

    could_pon_list:(该时刻玩家可不可以碰，可为1，不可为0)
	[0, 0, 0, ...]

    could_minkan_list: (该时刻玩家可不可以明杠，可为1，不可为0)
	[0, 0, 0, ...]

    action_list: (基于上面那些features，真正采取的行动，及相关的牌)
	[list(['Chi', [41, 44, 49], 3]), list(['DRAW', 52]), list(['DRAW', 124]), ..]
	这个list里可能包含的action有：
	(1) ['Chi', [41, 44, 49], 3]   玩家采取了chi决策，顺子牌为41, 44, 49, 从3号玩家(敌对玩家)那里call得
	(2) ['DRAW', 52] 	玩家采取了draw决策,draw的牌为52
	(3) ['Pon', [128, 129, 130], 2] 玩家采取了pon决策，刻子牌为128, 129, 130, 从2号玩家(敌对玩家)那里call得
	(4) ['REACH'] 	立直
	(5) ['MinKan', [3, 1, 2, 0], 1] 玩家采取了明杠决策，从1号玩家(敌对玩家)那里call得
	(6) ['AnKan', [120, 121], 3] 玩家采取了暗杠决策，从3号玩家(玩家自己)那里call得
	(7) ['KaKan', [118, 117, 116, 119], 3] 加杠, 3表示加杠前的碰是从3号玩家(敌对玩家)那里碰来的
	
]

